"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var calculations_1 = require("../time/calculations");
var math_1 = require("../utils/math");
var TimeOfInterest = (function () {
    function TimeOfInterest(time) {
        this.time = time;
        this.jd = 0.0;
        this.T = 0.0;
        this.jd = calculations_1.timeCalc.time2julianDay(time);
        this.T = calculations_1.timeCalc.julianDay2julianCenturiesJ2000(this.jd);
    }
    TimeOfInterest.prototype.getTime = function () {
        return this.time;
    };
    TimeOfInterest.prototype.getString = function () {
        var _a = this.time, year = _a.year, month = _a.month, day = _a.day, hour = _a.hour, min = _a.min, sec = _a.sec;
        return year + "-" + (0, math_1.pad)(month, 2) + "-" + (0, math_1.pad)(day, 2) + " " + (0, math_1.pad)(hour, 2) + ":" + (0, math_1.pad)(min, 2) + ":" + (0, math_1.pad)(sec, 2);
    };
    TimeOfInterest.prototype.getDate = function () {
        var _a = this.time, year = _a.year, month = _a.month, day = _a.day, hour = _a.hour, min = _a.min, sec = _a.sec;
        return new Date(Date.UTC(year, month - 1, day, hour, min, sec));
    };
    TimeOfInterest.prototype.getDecimalYear = function () {
        return calculations_1.timeCalc.getDecimalYear(this.time);
    };
    TimeOfInterest.prototype.getDayOfYear = function () {
        return calculations_1.timeCalc.getDayOfYear(this.time);
    };
    TimeOfInterest.prototype.getDayOfWeek = function () {
        return calculations_1.timeCalc.getDayOfWeek(this.time);
    };
    TimeOfInterest.prototype.isLeapYear = function () {
        return calculations_1.timeCalc.isLeapYear(this.time.year);
    };
    TimeOfInterest.prototype.getJulianDay = function () {
        return this.jd;
    };
    TimeOfInterest.prototype.getJulianDay0 = function () {
        return calculations_1.timeCalc.julianDay2julianDay0(this.jd);
    };
    TimeOfInterest.prototype.getJulianCenturiesJ2000 = function () {
        return this.T;
    };
    TimeOfInterest.prototype.getJulianMillenniaJ2000 = function () {
        return calculations_1.timeCalc.julianDay2julianMillenniaJ2000(this.jd);
    };
    TimeOfInterest.prototype.getGreenwichMeanSiderealTime = function () {
        return calculations_1.timeCalc.getGreenwichMeanSiderealTime(this.T);
    };
    TimeOfInterest.prototype.getGreenwichApparentSiderealTime = function () {
        return calculations_1.timeCalc.getGreenwichApparentSiderealTime(this.T);
    };
    TimeOfInterest.prototype.getLocalMeanSiderealTime = function (location) {
        return calculations_1.timeCalc.getLocalMeanSiderealTime(this.T, location.lon);
    };
    TimeOfInterest.prototype.getLocalApparentSiderealTime = function (location) {
        return calculations_1.timeCalc.getLocalApparentSiderealTime(this.T, location.lon);
    };
    TimeOfInterest.prototype.getDeltaT = function () {
        var _a = this.time, year = _a.year, month = _a.month;
        return calculations_1.timeCalc.getDeltaT(year, month);
    };
    return TimeOfInterest;
}());
exports.default = TimeOfInterest;
